buildscript {
	repositories {
		// mavenLocal()
		mavenCentral()
		jcenter()
		// maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
	}

	dependencies {
		classpath 'org.anarres.gradle:gradle-stdproject-plugin:1.0.8'
	}
}

apply plugin: 'org.anarres.stdproject'
stdproject {
	javadocLinkSource = true;
}

	group = "org.anarres"

	apply plugin: 'org.anarres.stdmodule'
	stdmodule {
		description "An embeddable C Preprocessor for the JVM."
		author id: 'shevek', name: 'Shevek', email: 'github@anarres.org'
		license 'Apache-2.0'
	}

	sourceCompatibility = 1.5
	animalsniffer {
		signature = "org.codehaus.mojo.signature:java15:+@signature"
	}

dependencies {
	compile 'com.google.code.findbugs:annotations:3.0.1'
	compile 'org.slf4j:slf4j-api:1.7.12'

	compile 'net.sf.jopt-simple:jopt-simple:4.7'
	compile 'org.apache.ant:ant:1.7.0'
	compile 'com.github.zafarkhaja:java-semver:0.8.0'

	testCompile 'com.google.guava:guava:18.0'
}

// This ensures that the info-plugin's properties file is in the
// same location for the test suite as in the JAR.
task('processTestVersionResources', type: Copy, dependsOn: processTestResources) {
	into project.sourceSets.test.output.resourcesDir
	from(writeManifestProperties) {
		into "META-INF"
	}
}
testClasses.dependsOn(processTestVersionResources)

apply plugin: 'application'

mainClassName = "org.anarres.cpp.Main"

jar {
	manifest {
		attributes "Main-Class": "$mainClassName"
	}

	from {
		configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
	}
}